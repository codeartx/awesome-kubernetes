apiVersion: apps/v1
kind: Deployment
metadata:
  name: tomcat-deployment
  labels:
    app: tomcat-deployment
spec:
  replicas: 3 # 副本数量
  strategy: # 更新策略
    type: RollingUpdate
  selector: # 通过标签选择，限制该 Deployment 管理的 Pod
    matchLabels:
      app: tomcat9 # 需与 spec.template.metadata.labels.app 属性对应
  # 部署/更新 pod 的模板
  template:
    metadata:
      name: tomcat-deployment-tmpl
      labels:
        app: tomcat9 # 标签，会绑定到该Deployment锁管理的所有Pod上
    spec:
      # 指定在某个Node节点运行
      nodeName: docker-desktop
      containers:
        - name: tomcat-cotainer
          image: tomcat:9.0.20-jre8-alpine
          imagePullPolicy: IfNotPresent # 镜像拉取策略
          ports:
            - containerPort: 8080 # 容器内的应用端控，无法被外界访问

---
apiVersion: v1
kind: Service
metadata:
  name: tomcat-svc
spec:
  selector:
    app: tomcat9 # 与控制器 spec.selector.matchLabels.app 属性对应
  type: NodePort # 让外部可以访问服务
  ports:
    - targetPort: 8080 # 容器内应用端口 spec.template.spec.containers[0].ports[0].containerPort
      port: 8888 # 暴露给集群内其他应用访问的端口
      nodePort: 30001 # 绑定主机（节点Node）端口，供集群外部访问

# 定义 Ingress规则
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: tomcat-ingress
  annotations:
    # nginx-controller的命令行参数指定加载对应class的ingress规则
    kubernetes.io/ingress.class: nginx
spec:
  rules:
    - host: localhost
      http:
        paths:
          - path: /
            backend:
              serviceName: tomcat-svc # 转发目标的服务名称
              servicePort: 8888  # 服务的端口
